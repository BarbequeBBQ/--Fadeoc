/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2016-09-14 01:40:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Home</title>\r\n");
      out.write("<!-- 1.CSS -->\r\n");
      out.write("\t\t<link  rel=\"stylesheet\" type=\"text/css\" href=\"css/jquery-ui.css\"/>\r\n");
      out.write("\t\t<link  rel=\"stylesheet\" type=\"text/css\" href=\"css/layout-default-latest.css\"/>\r\n");
      out.write("\t\t<link  rel=\"stylesheet\" type=\"text/css\" href=\"css/ui.jqgrid.css\"/>\r\n");
      out.write("<!-- 2.JS -->\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"js/jquery-1.12.4.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"js/jquery-ui.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"js/jquery.layout-latest.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"js/jquery.jqGrid.min.js\"></script>\r\n");
      out.write("\t\t<script type=\"text/javascript\" src=\"js/grid.locale-cn.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("<!-- 3.就绪函数 -->\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\t\t$(\"#userList\").jqGrid({        \r\n");
      out.write("\t\t\t\t   \turl:'user/pageLists',//UserController的url地址\r\n");
      out.write("\t\t\t\t\tdatatype: \"json\",//url返回的数据类型\r\n");
      out.write("\t\t\t\t   \tcolNames:['序号','用户名', '密码', '创建人','创建时间','最后修改人','最后修改时间','备注'],\r\n");
      out.write("\t\t\t\t   \tcolModel:[\r\n");
      out.write("\t\t\t\t\t\t{name:'id',index:'id', width:55},\r\n");
      out.write("\t\t\t\t\t\t{name:'userName',index:'userName', width:90},\r\n");
      out.write("\t\t\t\t\t\t{name:'password',index:'password', width:100},\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t{name:'creater',index:'creater', width:80, align:\"right\"},\r\n");
      out.write("\t\t\t\t\t\t{name:'createrTime',index:'createrTime', width:130, align:\"right\",formatter:'date',formatoptions: {srcformat:'Y-m-d H:i:s',newformat:'Y/m/d H:i:s'}},\t\t\r\n");
      out.write("\t\t\t\t\t\t{name:'updater',index:'updater', width:80,align:\"right\"},\r\n");
      out.write("\t\t\t\t\t\t{name:'updateTime',index:'updateTime', width:130,align:\"right\",formatter:'date',formatoptions: {srcformat:'Y-m-d H:i:s',newformat:'Y/m/d H:i:s'}},\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t{name:'remaker',index:'remaker', width:150, sortable:false}\t\t\r\n");
      out.write("\t\t\t\t   \t],\r\n");
      out.write("\t\t\t\t   \trowNum:20,//每页记录数\r\n");
      out.write("\t\t\t\t   \trowList:[20,50,100,200,500],//每页记录数下拉列表\r\n");
      out.write("\t\t\t\t   \tpager: '#userListToolBar',//工具栏  <div id=\"userListToolBar\"></div>\r\n");
      out.write("\t\t\t\t   \tsortname: 'id',//排序字段\r\n");
      out.write("\t\t\t\t    sortorder: \"desc\",//升降序 \r\n");
      out.write("\t\t\t\t\tjsonReader: {\r\n");
      out.write("\t\t\t\t\t\troot: \t\"content\",    \t\t// 结果集引用名: json中代表实际模型数据的入口\r\n");
      out.write("\t\t\t\t\t\ttotal: \t\"totalPages\",    \t// json中代表页码总数的数据\r\n");
      out.write("\t\t\t\t\t\trecords:\"totalElements\", \t// json中代表数据行总数的数据\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tviewrecords: true,\r\n");
      out.write("\t\t\t\t\tcaption: \"用户列表\",\r\n");
      out.write("\t\t\t\t\theight: '100%'\r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t$(\"#userList\").jqGrid('navGrid','#userListToolBar',{edit:false,add:false,del:false});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#userList\").jqGrid('navButtonAdd','#userListToolBar',{\r\n");
      out.write("\t\t\t\t\tcaption:\"Edit\",\r\n");
      out.write("\t\t\t\t\tonClickButton:function()\r\n");
      out.write("\t\t\t\t\t{\r\n");
      out.write("\t\t\t\t\t\tvar selrow = $(\"#userList\").jqGrid('getGridParam','selrow');\r\n");
      out.write("\t\t\t\t\t\tif(selrow){\r\n");
      out.write("\t\t\t\t\t\t\t//alert(\"select Row userName:\"+selrow);\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#userList\").jqGrid('GridToForm',selrow,\"#userForm\");\r\n");
      out.write("\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\talert(\"请选中一行记录!\")\r\n");
      out.write("\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t} \r\n");
      out.write("\t\t\t\t});\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\t\t<!-- 4.视图 -->\r\n");
      out.write("\t\t\t<table id=\"userList\"></table>\r\n");
      out.write("\t\t\t<div id=\"userListToolBar\"></div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<form method=\"post\"  id=\"userForm\" action=\"user/saveOrUpdate\" title='' style=\"width:350px;margin:0px;\">\r\n");
      out.write("\t\t\t\t<fieldset>\r\n");
      out.write("\t\t\t\t\t<legend>用户明细</legend>\r\n");
      out.write("\t\t\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<!-- ID:用户不需要关系,由系统进行维护 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"id\" hidden=\"true\" readonly=true id=\"invid\"/></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td> 用户名:</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"userName\"  /></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>密码</td>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"password\" name=\"password\"  /></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<!-- 系统维护字段\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>创建人</td>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"creater\"  /></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>创建时间</td>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"createrTime\"  /></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>最后修改人</td>\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"updater\"  /></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>最后修改时间</td>\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"updateTime\"  /></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t-->\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>备注</td>\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"text\" name=\"remaker\"  /></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t<td><input type=\"submit\" value=\"提交\"/></td>\r\n");
      out.write("\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</fieldset>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
